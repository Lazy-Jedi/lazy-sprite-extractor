/*
 * Created By: Uee
 * Last Modified: 16 October 2018
 *
 *
 * License CC-BY-NC:
 * Licensees may copy, distribute, display, and perform the work and make derivative works and remixes based on it only for non-commercial purposes.
 *
 *
 * NB!!!
 * Whatever Artwork is used in conjunction with this tool and is extracted using this tool has no affiliation with this tool or its creator.
 * The Artwork(s) belong to their respective creators (the individuals that made them) and the user of this tool should adhere to the respective licenses stipulated by the owners/creators of the Artwork.
 *
 *
 * Attribution:
 * Uee
 *
 *
 * For more Information about the licence use the link below:
 * https://en.wikipedia.org/wiki/Creative_Commons_license#Non-commercial_licenses
 * 
 */

using System;
using System.IO;
using UnityEditor;
using UnityEngine;
using Object = UnityEngine.Object;

namespace SpriteExtractor
{
    [Serializable]
    public class SpriteExtractor
    {
        #region VARIALBES

        public Texture2D SpriteSheet; // Sprite Sheet With Sub Sprites

        public string SpriteSheetPath { set; get; } // Sprite Sheet Path
        public string SavePath        { set; get; } // Path to Where the Extracted Sub Sprites should be saved
        public string Extension       { set; get; } // Extension of the Original Image.

        private Object[]  _subSprites;       // Object Array of sub sprites from the Sprite Sheet.
        private Texture2D _subTexture;       // Required to store a single Sub Sprite Texture
        private Rect      _subTextureRect;   // Required Rect to get the Dimensions of the Sub Sprite Texture
        private Texture2D _extractedTexture; // The extracted Sub Sprite that is saved as a .png

        #endregion

        /// <summary>
        /// Extract the Sub Sprites of a Sprite Sheet using the Metadata generated by using the Unity Sprite Editor.
        /// </summary>
        public void ExtractSprites()
        {
            _subSprites = AssetDatabase.LoadAllAssetRepresentationsAtPath(SpriteSheetPath);

            foreach (Sprite sprite in _subSprites)
            {
                _subTexture     = sprite.texture;
                _subTextureRect = sprite.textureRect;

                _extractedTexture = _subTexture.CropTexture2D((int) _subTextureRect.x, (int) _subTextureRect.y,
                                                              (int) _subTextureRect.width,
                                                              (int) _subTextureRect.height);

                byte[] data = _extractedTexture.EncodeToPNG();
                File.WriteAllBytes(SavePath + "/" + sprite.name + ".png", data);
            }

            AssetDatabase.Refresh();
        }
    }
}